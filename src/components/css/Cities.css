/* Establishes one centered column for the 'cities controls area':
   - hemisphere selection dropdown
   - Overview table
*/
#Cities .citiesControlsArea {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

#Cities table.overview,
#Cities table.citieslist {
    font-size: 0.7em;
    text-align: left;
}

#Cities .overview td:first-child {
    color: #61dafb;
    font-size: 0.9em;
    text-transform: uppercase;
    padding-right: 0.5em;
    vertical-align: bottom;
}

#Cities table.citieslist {
    font-size: 0.6em;
}

#Cities table.citieslist th:first-child,
#Cities table.citieslist td:first-child {
    padding-right: 0.5em;
}

#Cities table.citieslist th:last-child,
#Cities table.citieslist td:last-child {
    /* font-family: 'Courier New', Courier, monospace; */
    /* font-weight: 600; */
    /* font-size: 0.9em; */
    /* vertical-align: bottom; */
    padding-left: 0.5em;
    text-align: center;
}

@media only screen and (min-width: 768px) {
    #Cities table.overview {
        font-size: 1em;
    }
    #Cities table.citieslist {
        font-size: 0.8em;
    }
    #Cities .overview td:first-child {
        font-size: 0.75em;
    }
}

/* Main/root container for 'card' containing tabular list of Cities
*/
#Cities .citieslistCard {
    background: white;
    border-radius: 5px;
    padding: 0.5em;
    margin-top: 1em;
    color: rgb(90, 90, 90);
    text-align: center;
	position: relative;
}


/* Define a 3 column grid for displaying the data contained
   in a Linked List
   (Drop to 2 columns on smaller screens)
*/
#Cities #linkedListDataArea {
    display: grid;
    margin: 1em;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 20px;
    /* border: 1px dotted red; */
}

/* @media only screen and (max-width: 768px) {
    #Cities #linkedListDataArea {
        grid-template-columns: 1fr 1fr;
    }
    #Cities #linkedListDataArea .dataCard h5 {
        font-size: 0.65em !important;
        height: 3.5em !important;
    }
    #Cities .totalgross {
        font-size: 0.75em !important;
        margin-top: 0.5em !important;
    }
    #Cities .currenttitle {
        font-size: 0.6em !important;
    }
} */

/* Define a 1 column grid for displaying the data contained
   in a Queue or Stack
*/
#Cities #queueDataArea,
#Cities #stackDataArea {
    display: grid;
    margin: 1em;
    grid-template-columns: 1fr;
    grid-gap: 10px;
}

#Cities h2 {
    /* margin-top: 5em; */
    margin-bottom: 0.5em;
}


/* Select dropdown */
#Cities .select-style {
    display: block;
    font-size: 0.65em;
    font-family: inherit;
    padding: 5px;
    border: 2px solid rgb(220, 220, 220);
    border-radius: 3px;
    background-color: #fff;
    margin-bottom: 2em;
}

#Cities .select-style select {
    padding: 5px 8px;
    width: 130%;
    border: none;
    box-shadow: none;
    background-color: transparent;
    background-image: none;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
}

#Cities .select-style select:focus {
    outline: none;
}


/* Input fields */
#Cities input[type=text],
#Cities input[type=number] {
    border-radius: 3px;
    border: 1px solid #ccc;
    /* color: grey; */
    background: white;
    font-size: 0.65em; /* if not 'inherit'ed/set, is calculated as a small value */
    font-family: inherit; /* if not 'inherit'ed/set, is set to some boring font */
    /* font-weight: bold; */
    text-align: center;
    padding: 5px;
    transition: border-color 80ms ease-in-out;
}

#Cities input[type=text]:hover, 
#Cities input[type=number]:hover {
    border-color: darkgrey;
}

#Cities input[type=text]:focus, 
#Cities input[type=number]:focus {
    border-color: darkgrey;
}


/* 'Regular' buttons that actually look like buttons... */
#Cities button {
    background: rgb(50, 120, 200);
    border-radius: 4px;
    border: none;
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    color: #ffffff;
    cursor: pointer;
    display: inline-block;
    font-size: 0.7em;
    font-weight:bold;
    line-height: 0.5em;
    margin: 1em 2em;
    padding: 0.65em;
    text-align: center;
    text-decoration: none;
    transition: background 100ms ease-in-out, 
                transform 100ms ease;
    -webkit-appearance: none;
    -moz-appearance: none;
}

#Cities button:hover,
#Cities button:focus {
    background: rgb(50, 90, 170);
}

#Cities button:active {
    transform: scale(0.95);
}

#Cities button.severe {
    background: rgb(230, 90, 90);
}

#Cities button.severe:hover,
#Cities button.severe:focus {
    background: rgb(210, 70, 70);
}


/* Buttons containing FontAwesome SVG, which do not look like
'regular' buttons - just flat glyphs */
#Cities #positionControlsWrapper button {
    background: none;
    box-shadow: none;
    min-width: 3em;
    margin: 0em 0.5em;
	outline: none;
}

#Cities #positionControlsWrapper button:hover {
    color: #61dafb;
    cursor: pointer;
}

#Cities #positionControlsWrapper button:active {
    color: #fbad60;
}

#Cities .totalgross {
    margin-top: 1em;
    margin-bottom: 0.3em;
}
#Cities .currenttitle {
    font-size: 0.75em;
    color: #61dafb;
}

#Cities .dataCard .linkedlist:hover {
    cursor: pointer;
    box-shadow: inset 0 0px 30px rgba(97, 218, 251, 0.25), inset 0 0px 40px rgba(97, 218, 251, 0.45);
}

#Cities .dataCard .currentnode {
    box-shadow: inset 0 0px 30px rgba(97, 218, 251, 0.25), inset 0 0px 40px rgba(97, 218, 251, 0.45);
}

#Cities #linkedListDataArea .dataCard h5 {
    font-size: 0.7em;
    margin: 0;
    height: 3em;
    overflow: hidden;
}
#Cities #queueDataArea .dataCard h5,
#Cities #stackDataArea .dataCard h5 {
    font-size: 0.7em;
    margin: 0;
    height: 1.35em;
    overflow: hidden;
}

#Cities .dataCard p {
    font-size: 0.7em;
    margin: 0;
    margin-top: 10px;
}

/* Right-linking arrow shown for linked list nodes */
#Cities .dataCard .rightarrow {
    color:rgba(255, 255, 255, 0.8);
	position: absolute;
	right: -20px;
    top: 35%;
}


/* Arrow indicating the first element out of a queue/top of a stack */
#Cities .dataCard .firstoutarrow {
    color:rgba(255, 255, 255, 0.8);
	position: absolute;
	left: -30px;
    top: 35%;
}